var _ = require('lodash')._;

module.exports = DeferredCallback = function() {
    this._results = null;
    this._callback = null;
    this.callback = _.bind(this.callback, this);
    this.done = _.bind(this.done, this);
};
DeferredCallback.prototype.callback = function(err, result) {
    this._results = arguments;
    if (this._callback !== null) {
        this._callback.apply(null, this._results);
    }
};
DeferredCallback.prototype.done = function() {
    var self = this;
    return function(callback) {
        self._callback = callback;
        if (self._results !== null) {
            callback.apply(null, self._results);
        }
    }
};