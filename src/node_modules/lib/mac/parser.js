
var keys = ['id', 'ts', 'nonce', 'ext', 'mac'];
var e = getRegexp(keys);

exports.parse = function(header) {
    if (header && header.substr(0, 4) === 'MAC ') {
        var parts = header.substr(4).match(e);
        var parsed = {};
        for (var i in parts) {
            if (parts.hasOwnProperty(i)) {
                var j = parts[i].indexOf('=');
                var key = parts[i].substr(0, j);
                parsed[key] = parts[i].substr(j + 1).replace(/^"|"$/g, '');
            }
        }
        checkValidity(parsed);
        return parsed;
    } else {
        return null;
    }
};

function getRegexp(keys) {
    var symbol = '[\\x20-\\x21\\x23-\\x5b\\x5d-\\x7e]';
    return new RegExp('(' + keys.join('|') + ')=("' + symbol + '*"|' + symbol + '+?)(?=,\\s?|$)', 'g');
}
function checkValidity(values) {
    for (var i in keys) {
        if (keys.hasOwnProperty(i) && typeof values[keys[i]] === 'undefined') {
            throw new Error('Missing MAC authentication key: ' + keys[i]);
        }
    }
}